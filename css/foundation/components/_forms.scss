@import "global";
@import "buttons";

//
// @MIXINS
//

// We use this mixin to give us form styles for rows inside of forms
@mixin form-row-base {
  .row {
    @if $lte8 {
      margin: 0 ((-$form-spacing-lte8) / 2);
    }
    margin: 0 ((-$form-spacing) / 2);

    .column,
    .columns { 
      @if $lte8 {
        padding: 0 $form-spacing-lte8 / 2; 
        *padding-left: 0; 
        *padding-right: 0; 
      }
      padding: 0 $form-spacing / 2; 
    }

    // Use this to collapse the margins of a form row
    &.collapse { 
      margin: 0; 
      @if $lte8 {
        *margin-left: 15px; *margin-right: 15px;
      }

      .column,
      .columns { padding: 0; }
      @if $lte8 {
        .column > *,
        .columns > * { margin-left: 0; margin-right: 0; }
      }
      input {
        -moz-border-radius-bottom#{$opposite-direction}: 0;
        -moz-border-radius-top#{$opposite-direction}: 0;
        -webkit-border-bottom-#{$opposite-direction}-radius: 0;
        -webkit-border-top-#{$opposite-direction}-radius: 0;
      }

    }
  }
  input.column,
  input.columns,
  textarea.column,
  textarea.columns { 
    @if $lte8 {
      padding-#{$default-float}: $form-spacing-lte8 / 2; 
    }
    padding-#{$default-float}: $form-spacing / 2; 
  }
}

// @MIXIN
//
// We use this mixin to give all basic form elements their style
@mixin form-element {
  background-color: $input-bg-color;
  font-family: $input-font-family;
  border: $input-border-width $input-border-style $input-border-color;
  @if $experimental {
    -webkit-box-shadow: $input-box-shadow;
  }
  box-shadow: $input-box-shadow;
  color: $input-font-color;
  display: block;
  @if $lte8 {
    font-size: $input-font-size-lte8;
    margin: 0 0 $form-spacing-lte8 0;
    padding: $form-spacing-lte8 / 2;
    *padding-top: 0;
    *padding-bottom: 0;
    *padding-left: 1%;
    *padding-right: 1%;
    height: ($input-font-size-lte8 + ($form-spacing-lte8 * 1.5) - 1px);
    *height: ($input-font-size-lte8 + ($form-spacing-lte8 * 1.5) - 4px);
    *line-height: ($input-font-size-lte8 + ($form-spacing-lte8 * 1.5) - 4px);
  }
  font-size: $input-font-size;
  margin: 0 0 $form-spacing 0;
  padding: $form-spacing / 2;
  height: ($input-font-size + ($form-spacing * 1.5) - rem-calc(1));
  width: 100%;
  *width: 98%;
  @include box-sizing(border-box);
  @if $input-include-glowing-effect {
    @include block-glowing-effect(focus, $glowing-effect-fade-time, $glowing-effect-color);
  }
  // Basic focus styles
  &:focus {
    background: $input-focus-bg-color;
    border-color: $input-focus-border-color;
    outline: none;
  }

  // Disabled background input background color
  &[disabled] { background-color: $input-disabled-bg; }
}

// @MIXIN
//
// We use this mixin to create form labels
//
// $alignment - Alignment options. Default: false. Options: [right, inline, false]
// $base-style - Control whether or not the base styles come through. Default: true.
@mixin form-label($alignment:false, $base-style:true) {

  // Control whether or not the base styles come through.
  @if $base-style {
    @if $lte8 {font-size: $form-label-font-size-lte8;}
    font-size: $form-label-font-size;
    color: $form-label-font-color;
    cursor: $form-label-pointer;
    display: block;
    font-weight: $form-label-font-weight;
    line-height: $form-label-line-height;
    margin-bottom: $form-label-bottom-margin;
    *vertical-align: top;
  }

  // Alignment options
  @if $alignment == right {
    float: none;
    text-align: right;
  }
  @else if $alignment == inline {
    @if $lte8 {
      margin-bottom: $form-spacing-lte8;
      padding: $form-spacing-lte8 / 2 + 2px 0;
    }
    margin: 0 0 $form-spacing 0;
    padding: $form-spacing / 2 + rem-calc($input-border-width * 2) 0;
  }
}

// We use this mixin to create postfix/prefix form Labels
@mixin prefix-postfix-base {
  display: block;
  position: relative;
  z-index: 2;
  text-align: center;
  width: 100%;
  padding-top: 0;
  padding-bottom: 0;
  border-style: $input-prefix-border-type;
  border-width: $input-prefix-border-size;
  overflow: $input-prefix-overflow;
  @if $lte8 {
    font-size: $form-label-font-size-lte8;
    height: ($form-label-font-size-lte8 + ($form-spacing-lte8 * 1.5) - 1px);
    line-height: ($form-label-font-size-lte8 + ($form-spacing-lte8 * 1.5) - 1px);
  }
  font-size: $form-label-font-size;
  height: ($form-label-font-size + ($form-spacing * 1.5) - rem-calc(1));
  line-height: ($form-label-font-size + ($form-spacing * 1.5) - rem-calc(1));
}

// @MIXIN
//
// We use this mixin to create prefix label styles
// $bg - Default:$input-prefix-bg || scale-color(#fff, $lightness: -5%) !default;
// $is-button - Toggle position settings if prefix is a button. Default:false
//
@mixin prefix($bg:$input-prefix-bg, $border:$input-prefix-border-color, $is-button:false) {

  @if $bg {
    $bg-lightness: lightness($bg);
    background: $bg;
    border-#{$opposite-direction}: none;

    // Control the font color based on background brightness
    @if $bg-lightness > 70% or $bg == yellow { color: $input-prefix-font-color; }
    @else { color: $input-prefix-font-color-alt; }
  }

  @if $border {
    border-color: $border;
  }

  @if $is-button {
    padding-#{$default-float}: 0;
    padding-#{$opposite-direction}: 0;
    padding-top: 0;
    padding-bottom: 0;
    text-align: center;
    @if $lte8 {
      line-height: 34px;
    }
    line-height: rem-calc(34);
    border: none;
  }

}

// @MIXIN
//
// We use this mixin to create postfix label styles
// $bg - Default:$input-prefix-bg || scale-color(#fff, $lightness: -5%) !default;
// $is-button - Toggle position settings if prefix is a button. Default: false
@mixin postfix($bg:$input-prefix-bg, $border:$input-prefix-border-color, $is-button:false) {

  @if $bg {
    $bg-lightness: lightness($bg);
    background: $bg;
    border-#{$default-float}: none;

    // Control the font color based on background brightness
    @if $bg-lightness > 70%  or $bg == yellow { color: $input-prefix-font-color; }
    @else { color: $input-prefix-font-color-alt; }
  }

  @if $border {
    border-color: $border;
  }

  @if $is-button {
    padding-#{$default-float}: 0;
    padding-#{$opposite-direction}: 0;
    padding-top: 0;
    padding-bottom: 0;
    text-align: center;
    @if $lte8 {
      line-height: 34px;
    }
    line-height: rem-calc(34);
    border: none;
  }

}

// We use this mixin to style fieldsets
@mixin fieldset {
  border: $fieldset-border-style $fieldset-border-width $fieldset-border-color;
  @if $lte8 {
    padding: $fieldset-padding-lte8;
    margin: $fieldset-margin-lte8;
  }
  padding: $fieldset-padding;
  margin: $fieldset-margin;

  // and legend styles
  legend {
    font-weight: $legend-font-weight;
    background: $legend-bg;
    @if $lte8 {
      padding: $legend-padding-lte8;
    }
    padding: $legend-padding;
    margin: 0;
    @if $lte8 {
      margin-#{$default-float}: -3px;
    }
    margin-#{$default-float}: rem-calc(-3);
  }
}

// @MIXIN
//
// We use this mixin to control border and background color of error inputs
// $color - Default: $alert-color (found in settings file)
@mixin form-error-color($color:$alert-color) {
  border-color: $color;
  background-color: rgba($color, 0.1);

  // Go back to normal on focus
  &:focus {
    background: $input-focus-bg-color;
    border-color: $input-focus-border-color;
  }
}

// @MIXIN
//
// We use this simple mixin to style labels for error inputs
// $color - Default:$alert-color. Found in settings file
@mixin form-label-error-color($color:$alert-color) { color: $color; }

// @MIXIN
//
// We use this mixin to create error message styles
// $bg - Default: $alert-color (Found in settings file)
@mixin form-error-message($bg:$alert-color) {
  display: block;
  @if $lte8 {
    padding: $input-error-message-padding-lte8;
    margin-bottom: $form-spacing-lte8;
    font-size: $input-error-message-font-size-lte8;
  }
  padding: $input-error-message-padding;
  margin-top: $input-error-message-top;
  margin-bottom: $form-spacing;
  font-size: $input-error-message-font-size;
  font-weight: $input-error-message-font-weight;
  font-style: $input-error-message-font-style;

  // We can control the text color based on the brightness of the background.
  $bg-lightness: lightness($bg);
  background: $bg;
  @if $bg-lightness < 70% or $bg == yellow { color: $input-error-message-font-color; }
  @else { color: $input-error-message-font-color-alt; }
}

@include exports("form") {
  @if $include-html-form-classes {
    /* Standard Forms */
    form { 
      @if $lte8 {
        margin: 0 0 $form-spacing-lte8; 
      }
      margin: 0 0 $form-spacing; 
    }

    /* Using forms within rows, we need to set some defaults */
    form .row { @include form-row-base; }

    /* Label Styles */
    label { @include form-label;
      &.right { @include form-label(right,false); }
      &.inline { @include form-label(inline,false); }
      /* Styles for required inputs */
      small {
        text-transform: capitalize;
        color: scale-color($form-label-font-color, $lightness: 15%);
      }
    }

    select {
      -webkit-appearance: none !important;
      background:
        $select-bg-color
        url('data:image/svg+xml;base64, PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZlcnNpb249IjEuMSIgeD0iMHB4IiB5PSIwcHgiIHdpZHRoPSI2cHgiIGhlaWdodD0iM3B4IiB2aWV3Qm94PSIwIDAgNiAzIiBlbmFibGUtYmFja2dyb3VuZD0ibmV3IDAgMCA2IDMiIHhtbDpzcGFjZT0icHJlc2VydmUiPjxwb2x5Z29uIHBvaW50cz0iNS45OTIsMCAyLjk5MiwzIC0wLjAwOCwwICIvPjwvc3ZnPg==') no-repeat;
      background-position-x: 97%;
      background-position-y: center;
      border: $input-border-width $input-border-style $input-border-color;
      @if $lte8 {
        padding: $form-spacing-lte8 / 2;
        font-size: $input-font-size-lte8;
      }
      padding: $form-spacing / 2;
      font-size: $input-font-size;
      @include radius(0);
      &.radius { @include radius($global-radius); }
      &:hover {
        background:
          scale-color($select-bg-color, $lightness: -3%)
          url('data:image/svg+xml;base64, PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZlcnNpb249IjEuMSIgeD0iMHB4IiB5PSIwcHgiIHdpZHRoPSI2cHgiIGhlaWdodD0iM3B4IiB2aWV3Qm94PSIwIDAgNiAzIiBlbmFibGUtYmFja2dyb3VuZD0ibmV3IDAgMCA2IDMiIHhtbDpzcGFjZT0icHJlc2VydmUiPjxwb2x5Z29uIHBvaW50cz0iNS45OTIsMCAyLjk5MiwzIC0wLjAwOCwwICIvPjwvc3ZnPg==') no-repeat;
        background-position-x: 97%;
        background-position-y: center;
        border-color: $input-focus-border-color;
      }
    }

    select::-ms-expand {
      display:none;
    }
    
    @-moz-document url-prefix() {
      select { background: $select-bg-color; }
      select:hover { background: scale-color($select-bg-color, $lightness: -3%); }
    }
    /* Attach elements to the beginning or end of an input */
    .prefix,
    .postfix { @include prefix-postfix-base; }
    .prefix.button,
    .postfix.button { 
      *height: ($form-label-font-size-lte8 + ($form-spacing-lte8 * 1.5) + 1px);
    }

    /* Adjust padding, alignment and radius if pre/post element is a button */
    .postfix.button { @include button-size(false,false,false); @include postfix(false, false, true); }
    .prefix.button { @include button-size(false,false,false); @include prefix(false, false, true); }

    .prefix.button.radius { @include radius(0); @include side-radius(left, $button-radius); }
    .postfix.button.radius { @include radius(0); @include side-radius(right, $button-radius); }
    .prefix.button.round { @include radius(0); @include side-radius(left, $button-round); }
    .postfix.button.round { @include radius(0); @include side-radius(right, $button-round); }

    /* Separate prefix and postfix styles when on span or label so buttons keep their own */
    span.prefix,label.prefix { @include prefix();
      &.radius { @include radius(0); @include side-radius(left, $global-radius); }
    }
    span.postfix,label.postfix { @include postfix();
      &.radius { @include radius(0); @include side-radius(right, $global-radius); }
    }

    /* We use this to get basic styling on all basic form elements */
    input[type="text"],
    input[type="password"],
    input[type="date"],
    input[type="datetime"],
    input[type="datetime-local"],
    input[type="month"],
    input[type="week"],
    input[type="email"],
    input[type="number"],
    input[type="search"],
    input[type="tel"],
    input[type="time"],
    input[type="url"],
    textarea {
      -webkit-appearance: none;
      -webkit-border-radius: $input-border-radius;
      border-radius: $input-border-radius;
      @include form-element;
      @if not $input-include-glowing-effect {
          @include single-transition(all, 0.15s, linear);
      }
    }
    
    /* Add height value for select elements to match text input height */
    select {
      @if $lte8 {
        height: ($input-font-size-lte8 + ($form-spacing-lte8 * 1.5) - 1px);
      }
      height: ($input-font-size + ($form-spacing * 1.5) - rem-calc(1));
    }

    /* Adjust margin for form elements below */
    input[type="file"],
    input[type="checkbox"],
    input[type="radio"],
    select {
      @if $lte8 {
        margin: 0 0 $form-spacing-lte8 0;
      }
      margin: 0 0 $form-spacing 0;
    }

    input[type="checkbox"] + label,
    input[type="radio"] + label {
      display: inline-block;
      @if $lte8 {
        margin-#{$default-float}: $form-spacing-lte8 * .5;
        margin-#{$opposite-direction}: $form-spacing-lte8;
      }
      margin-#{$default-float}: $form-spacing * .5;
      margin-#{$opposite-direction}: $form-spacing;
      margin-bottom: 0;
      vertical-align: baseline;
    }

    /* Normalize file input width */
    input[type="file"] {
      width:100%;
    }

    /* We add basic fieldset styling */
    fieldset {
      @include fieldset;
    }

    /* Error Handling */

    #{data('abide')} {
      .error small.error, span.error, small.error {
        @include form-error-message;
      }
      span.error, small.error { display: none; }
    }

    span.error, small.error {
      @include form-error-message;
    }

    .error {
      input,
      textarea,
      select {
        margin-bottom: 0;
      }

      input[type="checkbox"],
      input[type="radio"] {
        @if $lte8 {
          margin-bottom: $form-spacing-lte8;
        }
        margin-bottom: $form-spacing;
      }

      label,
      label.error {
        @include form-label-error-color;
      }

      small.error {
        @include form-error-message;
      }

      > label {
        > small {
          color: scale-color($form-label-font-color, $lightness: 15%);
          background: transparent;
          padding: 0;
          text-transform: capitalize;
          font-style: normal;
          font-size: 60%;
          margin: 0;
          display: inline;
        }
      }

      span.error-message {
        display: block;
      }
    }

    input.error,
    textarea.error {
      margin-bottom: 0;
    }
    label.error { @include form-label-error-color; }
  }
}
